"""
Django settings for auth_project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import pymysql
pymysql.install_as_MySQLdb()  # 强制将PyMySQL伪装成MySQLdb

import os
from pathlib import Path
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gp8=51px^6vv7f8p-^ai38jk)1=tls3pk@v8p9ri*&nn87cw&m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['106.52.220.222', 'localhost', '127.0.0.1']

# 强制指定.env文件路径（替换为你的实际路径）
env_path = Path(__file__).parent.parent / '.env'  # 关键：定位到项目根目录的.env
load_dotenv(env_path)  # 加载指定路径的.env文件
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
     # 新增以下应用
    'apps.users',  # 新增：用户模块
    'django.contrib.sites',  # allauth依赖
    'allauth',
    'allauth.account',       # 账号认证
    'allauth.socialaccount', # 社交账号登录（可选）
]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 添加allauth必需的中间件（放在AuthenticationMiddleware之后）
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',  # 新增
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
'''
#以下配置在生产环境中使用，推送时请注释开发环境配置代码并解除此段注释
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),  # 从.env读取，不在代码中硬编码
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}
'''

#以下配置在开发环境中使用，推送时请解除生产环境配置代码注释并注释此段
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'db2025',  # 数据库名
        'USER': 'course_user',           # 数据库用户名
        'PASSWORD': 'ytt050330',      # 数据库密码
        'HOST': 'localhost',             # 数据库主机（固定写死）
        'PORT': '3306',                  # 端口（固定写死）
        'OPTIONS': {
            'charset': 'utf8mb4',
            'connect_timeout': 10,
        }
    }
}
CSRF_COOKIE_SECURE = False  # 本地HTTP环境禁用HTTPS检查
CSRF_TRUSTED_ORIGINS = ['http://127.0.0.1:8000']  # 添加信任的源
#_______________#

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'  # 设置为简体中文

TIME_ZONE = 'Asia/Shanghai'  # 设置为中国时区

USE_I18N = True  # 确保国际化功能开启（默认已开启）

USE_TZ = True

# 添加SITE_ID配置（allauth需要）
SITE_ID = 1
# 添加认证后端
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Django默认后端
    'allauth.account.auth_backends.AuthenticationBackend',  # allauth后端
]
# 登录重定向URL（登录后跳转到哪里）
LOGIN_REDIRECT_URL = '/'
# 登出重定向URL
LOGOUT_REDIRECT_URL = '/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',  # 告诉Django静态文件存放目录
]
STATIC_ROOT = BASE_DIR / 'staticfiles'
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'  
MEDIA_ROOT = BASE_DIR / 'media'  

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': 'backend.log',  # 日志文件保存路径
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'apps.users': {  # 你的用户模块日志
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}

# 邮箱
# 邮箱连接有误，先这样
ACCOUNT_EMAIL_VERIFICATION = "none"  # 禁用邮箱验证
ACCOUNT_EMAIL_REQUIRED = False       # 不强制要求邮箱（根据你的需求决定）

MOONSHOT_API_KEY = "sk-GYfUOOMi2nZ4iHqlPNBPohfGjoeDLANnKRaK9qDwBX29PQpn"
OPENAI_API_KEY = "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"